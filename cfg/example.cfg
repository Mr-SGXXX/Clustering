[global]
seed                    = None
device                  = cuda:2
# description of this experiment, will be used as the name of the log file
description             = None 


# dataset setting
# Image Datasets
# dataset                 = MNIST
# dataset                 = FashionMNIST
# dataset                 = USPS
# dataset                 = CIFAR10
# dataset                 = CIFAR100
# dataset                 = STL10
# dataset                 = ImageNet-10
# dataset                 = ImageNet-Dogs

# Seq Datasets
dataset                 = Reuters10K


# method setting
# method_name             = KMeans
# method_name             = SpectralClustering
# method_name             = EDESC
method_name             = IDEC
# method_name             = DEC
# method_name             = DeepCluster
# method_name             = CC
# method_name             = IIC
# method_name             = DivClust


# directory setting
log_dir                 = ./log
dataset_dir             = ./data
weight_dir              = ./weight
result_dir              = ./result
figure_dir              = ./figures

# "None" means no email reminder
email_cfg_path          = ./cfg/email.cfg 

# whether to record the silhouette coefficient 
# it shows the change of the data compactness and separation during training, but will cost much time when dealing big dataset.
record_sc               = False
# whether to save the clustering result(`pred_labels`)
save_clustering_result  = False
# whether to use ground truth K got from the dataset
use_ground_truth_K      = True
# if use_pretrain is True, the weight file should be in the weight_dir or it will treat is as None
use_pretrain            = True
# if use_ground_truth_K is True, this value will be ignored
n_clusters              = 10
# the number of workers for dataloader, when the dataset is in the memory, set it to 0.
workers                 = 0

# Dataset specific parameters
[MNIST]
img2seq_method          = resnet50
# img2seq_method          = flatten

[FashionMNIST]
img2seq_method          = resnet50
# img2seq_method          = flatten

[USPS]
img2seq_method          = flatten

[CIFAR10]
img2seq_method          = resnet50
# img2seq_method          = flatten

[CIFAR100]
img2seq_method          = resnet50
# img2seq_method          = flatten

[STL10]
# img2seq_method          = resnet50
# img2seq_method          = flatten
img2seq_method          = hog_color

[ImageNet-10]
ImageNet_dir            = None
img2seq_method          = resnet50
# img2seq_method          = flatten

[ImageNet-Dogs]
ImageNet_dir            = None
img2seq_method          = resnet50
# img2seq_method          = flatten

[Reuters10K]
# None


# classical clustering methods
[KMeans]
max_iterations          = 100

[SpectralClustering]
# cut_type                = RatioCut
cut_type                = NCut

distance_type           = nearest_neighbors
# distance_type           = euclidean
# distance_type           = cosine

# deep clustering methods
[EDESC]

learn_rate              = 0.001
batch_size              = 256
d                       = 5
eta                     = 5
beta                    = 0.1
encoder_dims            = 500, 500, 1000
decoder_dims            = 1000, 500, 500

[DeepCluster]
arch                    = alexnet
# arch                    = vgg16
sobel                   = True
clustering              = Kmeans
# clustering              = PIC
learn_rate              = 0.05
weight_decay            = -5
reassign                = 1
epochs                  = 200  
batch_size              = 256
momentum                = 0.9
# checkpoint file name, locate in `weight_dir`
# `download` means use the checkpoint offered by author. None means train from start
resume                  = download
# resume                  = None
checkpoint_freq         = 25000


[DEC]
# pretrain_file           = None
# pretrain_file           = DEC_Reuters10K_1704550951_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550953_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550956_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550957_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550958_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550962_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550961_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550963_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550974_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550977_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550979_pretrain.pth
pretrain_file           = DEC_Reuters10K_1704550981_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550983_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550985_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550987_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550988_pretrain.pth
pretrain_learn_rate     = 0.1
layer_wise_pretrain     = True
learn_rate              = 0.01
momentum                = 0.9
batch_size              = 256
train_max_epoch         = 20000
alpha                   = 1.0
hidden_dim              = 10
encoder_dims            = 500, 500, 2000
tol                     = 1e-3

[IDEC]
# pretrain_file           = None
# pretrain_file           = DEC_Reuters10K_1704550951_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550953_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550956_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550957_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550958_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550962_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550961_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550963_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550974_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550977_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550979_pretrain.pth
pretrain_file           = DEC_Reuters10K_1704550981_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550983_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550985_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550987_pretrain.pth
# pretrain_file           = DEC_Reuters10K_1704550988_pretrain.pth
pretrain_learn_rate     = 0.1
layer_wise_pretrain     = True
learn_rate              = 0.1
# update_interval 3 for Reuters10K, 30 for usps, 140 for mnist
update_interval         = 3
momentum                = 0.99
batch_size              = 256
train_max_epoch         = 20000
alpha                   = 1.0
gamma                   = 0.1
hidden_dim              = 10
encoder_dims            = 500, 500, 2000
tol                     = 1e-3


[email_reminder] 
# This part should be in another file named the email_cfg_path in the section global
# whether to use email reminder
in_use                  = False 
mail_host               = your_mail_host
mail_user               = your_mail_name
mail_pwd                = your_mail_password
receivers               = mails_to_receive
sender                  = your_mail_address
# max size of the attachment in MB
max_size_mb             = 20 